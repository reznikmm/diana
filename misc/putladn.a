with TEXT_IO, USERPK, LALRIDL, DIANAMAN;
use  TEXT_IO, USERPK, LALRIDL, DIANAMAN;

procedure PUTLADN is   --  Generates the Ada package specification for LALRIDL

  RESULT_FILE: TEXT_IO.FILE_TYPE;

  function UPPER_CASE (A: STRING) return STRING is
    S: STRING(1 .. A'LENGTH) := A;
    MAGIC: constant := CHARACTER'POS('A') - CHARACTER'POS('a');
  begin
    for I in 1 .. S'LENGTH loop
      if S(I) in 'a' .. 'z' then
        S(I) := CHARACTER'VAL(CHARACTER'POS(S(I)) + MAGIC);
      end if;
    end loop;
    return S;
  end UPPER_CASE;

  procedure PUT_HEADING is

  begin -- PUT_HEADING
    PUT_LINE ("with USERPK, DIANATTR; use USERPK, DIANATTR;");
    PUT_LINE ("package DIANA is");
    NEW_LINE;
  end PUT_HEADING;

  procedure PUT_NODE_NAMES is

    NODE_LIST  :  SEQ_TYPE;

  begin -- PUT_NODE_NAMES
    NODE_LIST := LIST ( D ( XD_GRAMMAR, D ( XD_USER_ROOT, CONST_ROOT)));
    if not IS_EMPTY (NODE_LIST)
    then
      PUT_LINE ("  type NODE_NAME is");
      PUT (ASCII.HT & "( DN_");
      PUT_LINE (UPPER_CASE(PRINTNAME (D (XD_NAME, HEAD (NODE_LIST)))));
      NODE_LIST := TAIL (NODE_LIST);
    end if;
    while not IS_EMPTY (NODE_LIST)
    loop
      PUT (ASCII.HT & ", DN_");
      PUT_LINE (UPPER_CASE( PRINTNAME (D (XD_NAME, HEAD (NODE_LIST)))));
      NODE_LIST := TAIL (NODE_LIST);
    end loop;
    PUT_LINE ("    );");
    NEW_LINE;
  end PUT_NODE_NAMES;

  procedure PUT_ATTRIBUTE_NAMES is

    NODE_LIST	   :  SEQ_TYPE;
    ATTRIBUTE_LIST :  SEQ_TYPE;
    ATTRIBUTE	   :  TREE;
    ATTR_NUM	   :  NATURAL;
    MAX_ATTR_NUM   :  INTEGER := -1;
    FIRST_ATTR	   :  BOOLEAN := true;

  begin  -- PUT_ATTRIBUTE_NAMES

    PUT_LINE ("with USERPK; use USERPK;");
    PUT_LINE("package LALRIDL is");
    NEW_LINE;
    NODE_LIST := LIST ( D ( XD_GRAMMAR, D ( XD_USER_ROOT, CONST_ROOT)));
    if not IS_EMPTY (NODE_LIST)
    then
      while not IS_EMPTY (NODE_LIST)
      loop
	ATTRIBUTE_LIST := LIST ( HEAD ( NODE_LIST ));
	NODE_LIST := TAIL ( NODE_LIST);
	while not IS_EMPTY (ATTRIBUTE_LIST)
	loop
	  ATTRIBUTE := HEAD (ATTRIBUTE_LIST);
	  if KIND(ATTRIBUTE) = DN_TERMINAL then
	    ATTR_NUM  := ABS (DI (XD_TER_NBR, ATTRIBUTE));
	    if ATTR_NUM > MAX_ATTR_NUM
	    then -- This is a new attribute
	      MAX_ATTR_NUM := ATTR_NUM;
	      if FIRST_ATTR
	      then
		FIRST_ATTR := false;
		PUT_LINE ("  type ATTRIBUTE_NAME is");
		PUT (ASCII.HT & "  ( ");
	      else
		PUT (ASCII.HT & "  , ");
	      end if;
	      PUT_LINE (UPPER_CASE( PRINTNAME (D (XD_SYMREP, ATTRIBUTE))));
	    end if;
	  end if;
	  ATTRIBUTE_LIST := TAIL ( ATTRIBUTE_LIST );
	end loop;
      end loop;
      PUT_LINE ("    );");
      NEW_LINE;
    end if;
    --put_line("end DIANATTR;");
  end PUT_ATTRIBUTE_NAMES;

  procedure PUT_PROCEDURE_SPECS is

  begin  -- PUT_PROCEDURE_SPECS
    PUT_LINE ("  procedure CREATE_DIANA;");
    PUT_LINE ("  procedure OPEN_DIANA;");
    NEW_LINE;
    PUT_LINE ("  function MAKE (C: in NODE_NAME) return TREE;");
    PUT_LINE ("  -- procedure DESTROY (t: in TREE);");
    PUT_LINE ("  function KIND (T: in TREE) return NODE_NAME;");
    NEW_LINE;
    PUT_LINE ("  -- Other functions/procedures defined in DIANAMAN.SPC");
    NEW_LINE;
    PUT_LINE ("  -- Attribute functions/procedures (Janus version)");
    NEW_LINE;
    PUT_LINE ("  procedure D (A: ATTRIBUTE_NAME; T: in TREE; V: in TREE);");
    PUT_LINE ("  function  D (A: ATTRIBUTE_NAME; T: in TREE) return TREE ;");
    NEW_LINE;
    PUT_LINE ("  procedure DB(A: ATTRIBUTE_NAME; T: in TREE; V: in BOOLEAN);");
    PUT_LINE ("  function  DB(A: ATTRIBUTE_NAME; T: in TREE) return BOOLEAN ;");
    NEW_LINE;
    PUT_LINE ("  -- for Ada (not universal) integers");
    PUT_LINE ("  procedure DI(A: ATTRIBUTE_NAME; T: in TREE; V: in  INTEGER);");
    PUT_LINE ("  function  DI(A: ATTRIBUTE_NAME; T: in TREE) return INTEGER ;");
    NEW_LINE;
    PUT_LINE ("  function NODE_IMAGE (C: NODE_NAME) return STRING;");
    PUT_LINE ("  function ATTR_IMAGE (A: ATTRIBUTE_NAME) return STRING;");
    NEW_LINE;
    PUT_LINE ("end LALRIDL;");
  end PUT_PROCEDURE_SPECS;

begin -- PUTLADN
  OPEN_DIANA;

  CREATE(RESULT_FILE, NAME => "DIANA.NEW");
  SET_OUTPUT(RESULT_FILE);

  PUT_LINE("-- This file contains specification of LALRIDL");
  PUT_LINE("-- It was generated by the program PUTLADN");
  NEW_LINE;
  PUT_ATTRIBUTE_NAMES;

  NEW_LINE;
  --PUT_HEADING;
  PUT_NODE_NAMES;
  PUT_PROCEDURE_SPECS;

  SET_OUTPUT(STANDARD_OUTPUT);
  CLOSE(RESULT_FILE);
end PUTLADN;
